apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

// Android libraries
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = project.hasProperty("BINTRAY_COMMON_GROUP_ID") ? BINTRAY_COMMON_GROUP_ID : ""
version = BINTRAY_LIB_VERSION

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId project.hasProperty("BINTRAY_COMMON_GROUP_ID") ? BINTRAY_COMMON_GROUP_ID : ""
                artifactId BINTRAY_LIB_ARTIFACT_ID

                name BINTRAY_LIB_NAME
                description BINTRAY_LIB_DESCRIPTION
                version BINTRAY_LIB_VERSION
                url BINTRAY_LIB_SITE_URL

                // Set your license
                licenses {
                    license {
                        url project.hasProperty("BINTRAY_COMMON_LICENSE_URL") ? BINTRAY_COMMON_LICENSE_URL : ""
                    }
                }
                developers {
                    developer {
                        id project.hasProperty("BINTRAY_COMMON_DEV_ID") ? BINTRAY_COMMON_DEV_ID : ""
                        name project.hasProperty("BINTRAY_COMMON_DEV_NAME") ? BINTRAY_COMMON_DEV_NAME : ""
                        email project.hasProperty("BINTRAY_COMMON_DEV_MAIL") ? BINTRAY_COMMON_DEV_MAIL : ""
                    }
                }
                scm {
                    connection BINTRAY_LIB_GIT_URL
                    developerConnection BINTRAY_LIB_GIT_URL
                    url BINTRAY_LIB_SITE_URL
                }
            }
        }.writeTo("$buildDir/poms/pom-default.xml")
//        }
    }
}

bintray {
    user = project.hasProperty("BINTRAY_COMMON_USERNAME") ? BINTRAY_COMMON_USERNAME : ""
    key = project.hasProperty("BINTRAY_COMMON_APIKEY") ? BINTRAY_COMMON_APIKEY : ""

    configurations = ['archives']
    pkg {
        repo = project.hasProperty("BINTRAY_COMMON_REPO") ? BINTRAY_COMMON_REPO : ""
        name = BINTRAY_LIB_REPO_NAME
        desc = BINTRAY_LIB_DESCRIPTION
        websiteUrl = BINTRAY_LIB_SITE_URL
        vcsUrl = BINTRAY_LIB_GIT_URL
        licenses = [project.hasProperty("BINTRAY_COMMON_LICENSE_ID") ? BINTRAY_COMMON_LICENSE_ID : ""]
        publish = true
        publicDownloadNumbers = true
        version {
            desc = BINTRAY_LIB_DESCRIPTION
            gpg {
                sign = true
                passphrase = project.hasProperty("BINTRAY_COMMON_GPG_PASSWORD") ? BINTRAY_COMMON_GPG_PASSWORD : ""
            }
        }
    }
}

bintrayUpload {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'javadocJar'
    dependsOn 'sourcesJar'
}